#!/bin/sh

# This script prepares and runs all the participants in one terminal,
# forwarding the solvers' output to log files.
# Alternatively, you may execute the script "runFluid" and start the Solid participants manually
# in separate terminals.

# Run this script with "-parallel" for parallel simulations

# The script "Allclean" cleans-up the result and log files.
# Set up the run parameters:

# 1 for true, 0 for false
parallel=0
if [ "$1" = "-parallel" ]; then
    parallel=1
fi

# =============== Participant 1: Fluid ===========================
Participant1="Fluid"

    # Prepare
    echo "Preparing the ${Participant1} participant..."
    cd ${Participant1}

    # Run and get the process id
    if [ $parallel -eq 1 ]; then
        echo "  Starting the ${Participant1} participant in parallel..."
        ./run.sh $2 > ${Participant1}.log 2>&1 &
    else
        echo "  Starting the ${Participant1} participant in serial..."
        ./run.sh 1 > ${Participant1}.log 2>&1 &
    fi
    PIDParticipant1=$!
    cd ..

# =============== Participant 2: Solid1 ===========================
Participant2="Solid"

    # Run
    echo "  Starting the ${Participant2} participant..."
    cd ${Participant2}

    ./run.sh > ${Participant2}.log  2>&1 &
    PIDParticipant2=$!
    cd ..

# # =============== Wait for all the participants to finish =======
echo "Waiting for the participants to exit..., PIDs: ${PIDParticipant1}, ${PIDParticipant2}"
echo "(you may run 'tail -f ${Participant1}.log' in another terminal to check the progress)"

echo "To interrupt the simulation, press 'Ctrl+C'."
while ps -p ${PIDParticipant1} > /dev/null; do
    if [ "$input" = "c" ]; then
        kill ${PIDParticipant1}
        kill ${PIDParticipant2}
        false
    fi
done

if [ $? -ne 0 ] || [ "$(grep -c -E "error:" ${Participant1}/${Participant1}.log)" -ne 0 ] || [ "$(grep -c -E "error:" ${Participant2}/${Participant2}.log)" -ne 0 ]; then
    echo ""
    echo "Something went wrong... See the log files for more."
    # Precaution
    kill ${PIDParticipant1}
    kill ${PIDParticipant2}
    
else
    echo ""
    echo "The simulation completed! (check for any errors)"
    if [ $parallel -eq 1 ]; then
        echo "Reconstructing fields..."
    fi
fi